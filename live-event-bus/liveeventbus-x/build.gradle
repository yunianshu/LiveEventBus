apply plugin: 'com.android.library'
apply plugin: 'maven-publish'

def mavenPropertiesFile = rootProject.file("maven.properties")
def mavenProperties = new Properties()
mavenProperties.load(new FileInputStream(mavenPropertiesFile))

def uploadArchivesVersion = {
    if (mavenProperties['release'] == "false") {
        mavenProperties['uploadArchivesVersion'] + "-SNAPSHOT"
    } else {
        mavenProperties['uploadArchivesVersion']
    }
}

android {
    compileSdkVersion 31

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 31
        versionCode 1
        versionName "1.8.1"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}

task sourceJar(type: Jar) {
    from android.sourceSets.main.java.getSrcDirs()
    archiveClassifier = "sources"
}
afterEvaluate {
    publishing {
        repositories { RepositoryHandler handler->
            handler.mavenLocal()  // 发布到默认的 本地maven 仓库 ，路径： USER_HOME/.m2/repository/
            maven {//发布到
                allowInsecureProtocol true
                url mavenProperties['releaseUrl']
                credentials {
                    username mavenProperties['userName']
                    password mavenProperties['password']
                }
            }
        }
        publications { PublicationContainer publicationContainer ->
            // 发布正式包
            release(MavenPublication) {
                from components.release // 注释1:使用 Android Gradle 插件生成的组件，作为发布的内容
                artifact sourceJar // 上传源码
                groupId = "com.hprt.sdk"
                artifactId = "liveeventbus"
                version = uploadArchivesVersion()
            }
        }
    }
}

dependencies {
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation 'androidx.lifecycle:lifecycle-livedata:2.4.0'
}